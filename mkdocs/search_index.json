{
    "docs": [
        {
            "location": "/", 
            "text": "Table of Contents\n\n\n\n\nAbout this module\n\n\nDemo\n\n\nGoals\n\n\nConcepts\n\n\nExample\n\n\nFeatures\n\n\nSecurity\n\n\nInstallation\n \n\n\nReleases\n  \n\n\nExtending\n\n\nRelated Projects\n\n\nTroubleshooting\n\n\nNotes\n\n\nSimilar Projects\n\n\n\n\nAbout this Module\n\n\nThe YAML form module is a FAPI based form builder and submission manager for \nDrupal 8.\n\n\n\n\nIMPORTANT:\n\nThe YAML form module now includes a user interface (UI), which allows \nsite builders to easily build and maintain forms. \nDevelopers are still able to 'view source' and edit a form's \n\nFAPI\n \n\nRender Array\n\nusing \nYAML\n.\n\n\n\n\nThe primary use case for this module is...\n\n\n\n\nAdmin duplicates and customizes an existing form/template.\n\n\nAdmin tests and publishes the new form.\n\n\nUser fills in and submits the form.\n\n\nSubmission is stored in the database.\n\n\nAdmin receives an email notification. \n\n\nUser receives an email confirmation.\n\n\nAdmin views submissions online.\n\n\nAdmin downloads all submissions as a CSV.\n\n\n\n\nAdditional things to consider...\n\n\n\n\nResults can be exported as a CSV for use in \n  \nGoogle Sheets\n\n  or \nExcel\n.\n\n\nThe alternatives: \n  \nContact\n with \n  \nContact Storage\n,\n  \nEform\n,\n  \nWebform\n,\n  \nForm.io\n,\n  \nGoogle Forms\n,\n  \nSurveyMonky\n,\n  \nWebform.com\n,\n  \nWufoo\n,\n  \netc...\n\n\nHow can you help extend and improve this module?\n\n\n\n\nDemo\n\n\n\n\n\n\nEvaluate this project online using \nsimplytest.me\n.\n\n\nWatch a demo\n of the YAML form module.\n\n\n\n\nGoals\n\n\n\n\nA stable, maintainable, and tested API for building forms and submission handling. \n\n\nA pluggable/extensible API for custom submission handling. \n\n\nA focused and limited feature set to ensure maintainability. \n\n\n\n\nFeatures\n\n\nForms\n \n\n\n\n\nCreate forms using Drupal's Form API (FAPI)\n\n\nCustom confirmation page, message, and redirection\n\n\nReusable and customizable list of common select menu, radios, and checkbox \n  options. This includes countries, states, etc...\n\n\nReuse options for autocompletion\n\n\nStarter templates for common forms\n\n\nAbility to duplicate existing forms and templates\n\n\nPrepopulate form with querystring parameters\n\n\nSupport for confidential submissions, which have no recorded IP address\n  and must be submitted while logged out.\n\n\nSet custom URL aliases for the form and its confirmation page\n\n\nPreview and save draft support\n\n\n\n\nElements\n\n\n\n\nSupport for every\n  \nform element\n\n  included in Drupal 8 core. This includes file uploads and entity references.\n\n\nConditional logic using \nFAPI States API\n\n\nInput masks (using \njquery.inputmask\n)\n\n\nPrivate elements\n\n\nUnique element values\n\n\nDefine optional display format for individual elements. \n\n\nFor example, checkboxes can display as comma delimited value or a bullet list.\n\n\n\n\n\n\nProvide custom form elements, including...\n\n\nHTML source CodeMirror editor\n\n\nYAML source CodeMirror editor\n\n\nText source CodeMirror editor\n\n\nCredit card number\n\n\nEmail confirmation\n\n\nSelect other\n\n\nRadios other\n\n\nCheckboxes other\n\n\nComposite used for contacts and addresses\n\n\nLikert scale\n\n\n\n\n\n\nSupport for form functionality and elements provided by contrib modules \n  including\n  \nHoneypot\n,\n  \nMollom\n,\n  \nCAPTCHA\n,\n  \nValidators\n,\n  and more to come...\n\n\n\n\nSubmissions/Results\n\n\n\n\nView submissions as HTML, plain text, and YAML\n\n\nDownload results as a CSV to Google Sheets or MS Excel\n\n\nFine grain access control by roles and user\n\n\nUsers can view previous submissions\n\n\nLimit total number of submissions or user specific submissions\n\n\nDrush support for exporting CSV and purging submissions\n\n\n\n\nEmails/Handlers\n\n\n\n\nExtensible form submission handler plugin  \n\n\nHandles email notifications and confirmations \n\n\nPreview and resend emails\n\n\nHTML email (does not require any additional modules)\n\n\nFile attachments (requires \nMail System\n, only \nSwift Mailer\n has been tested) \n\n\n\n\nMultistep Form Wizard\n\n\n\n\nBuilds multi step forms\n\n\nCustomize previous and next button labels\n\n\nOptional progress bar  \n\n\n\n\nThird Party Settings\n\n\n\n\nAllows contrib modules to define additional settings and behaviors that can be \n  applied to all YAML forms or just one specific YAML form.\n\n\n\n\nIntegration\n\n\n\n\nBlock integration\n\n\nNode integration\n\n\nToken support\n\n\nYAML and HTML source editor using \nCodeMirror\n\n\n\n\nInternationalization\n\n\n\n\nTranslation integration\n\n\nTracks submission language\n\n\n\n\nDevelopment\n\n\n\n\nGenerate test submissions using devel generate and customizable test datasets\n\n\n\n\nInstallation\n\n\n\n\nCopy/upload the yamlform.module to the modules directory of your Drupal\n   installation.\n\n\n(optional) Manually install \nCodeMirror\n and \n    \njquery.inputmask\n\n    into the /libraries directory.\n   If CodeMirror and/or jquery.inputmask is not installed, they will be loaded \n   from \nhttps://cdnjs.com/\n.\n\n\nEnable the 'YAML form' or the 'YAML form UI' module or the in 'Extend'. \n   (/admin/modules)\n\n\nSetup permissions. (/admin/people/permissions#module-yamlform)\n\n\nBegin building a new YAML form or duplicate an existing one.\n   (/admin/structure/yamlform)\n\n\nPublish your new YAML form as a...\n\n\nPage:\n By linking to the published YAML form.\n  (/yamlform/contact)  \n\n\nNode:\n By creating a new node that references the YAML form.\n  (/node/add/yamlform)\n\n\nBlock:\n By placing a YAML form block on your site.\n  (/admin/structure/block)\n\n\n\n\n\n\n\n\nNotes\n\n\n\n\nTokens are supported and actively used by the YAML form module. \n  It is recommended that the\n\n\nToken module\n is installed.\n\n\nFor email file attachment support please install and configure the \n  \nMail System\n and \n  \nSwift Mailer\n modules.\n\n\n\n\nReleases\n\n\nEven though, the YAML form module is still under active development with\nregular \nbeta releases\n\nall YAML form configuration and submission data will be maintained and updated \nbetween releases.  \nAPIs can and will be changing\n while this module moves \nfrom beta release and finally a release candidate. \n\n\nSimply put it, if you install and use the YAML form module AS-IS, out of the \nbox, you \nshould\n be okay.  Once you start extending YAML forms with plugins, \nalter  hooks, and template overrides, you will need to read the release notes \nand assume \nthings will be changing\n.\n\n\nExtending\n\n\nYAML form provides a YamlFormHandler \nplugin\n\nas well as support for third party settings and alter hooks for contrib modules\nto extend and enhance a YAML form.\n\n\nYamlFormHandler plugin\n\n\nThe YamlFormHandler plugin allows developers to extend a YAML form's elements \nand submission handling. Each YamlFormHandler plugin should live in a dedicated \nmodule and handler namespace. For example, if a developer wanted to setup \nMailChimp integration, they would create the YAML form MailChimp module \n(yamlform_mailchimp.module) which would contain the YamlFormMailChimpHandler.\n\n\nThis approach/pattern will allow any popular YamlFormHandler plugins\n(that include tests) to be easily contributed back to the main YAML form module.\n\n\nThird Party Settings\n\n\nThe YAML form module allows contrib modules to also set third party settings\nfor all YAML forms and/or one specific YAML form.  \n\n\nSee the yamlform_test_third_party_settings.module for an example of how a\ncontrib can use third party settings to extend and enhance a YAML form.\n\n\nRelated Projects\n\n\nBelow are additional projects that extend and provide additional YAML form \nfeatures and functionality.\n\n\n\n\nYAML Form Queue\n\n  Provides a queue handler for YAML Form to store form submissions in a queue.\n\n\n\n\nNotes\n\n\n\n\nElement names will be used to store data.\n\n\nDuplicate element names are not allowed.\n\n\nThe \n#tree\n \n  property, which is used to allow collections of form elements, is not allowed.\n\n\nElement callback properties are not supported within a YAML element.\n  This includes \n#element_validate\n, \n#after_build\n, \n#post_render\n, \n#pre_render\n, \n#process\n, \n#submit\n, \n#value_callback\n, and \n#validate\n.\n\n\nOnce there has been a form submission, existing element names should never be\n  deleted, they can be be hidden (via \n'#access': false\n).\n\n\n\n\nTroubleshooting\n\n\nHow to debug issues with YAML form elements/elements?\n\n\n\n\nA YAML form's element data is just a \nForm API(FAPI)\n\n  \nrender array\n. \n\n\nSome issues can be fixed by reading the API documentation associated \n  with a given \nform element\n.\n  Links to a form element's API documentation is include in the Elements \n  overview. (/admin/structure/yamlform/settings/elements)\n\n\n\n\nHow to get help fixing issues with the YAML form module?\n\n\n\n\nReview the YAML form module's \nissue queue\n \n  for similar issues.\n\n\nIf you need to create a new issue, \nplease\n create and export an example of \n  the broken YAML form configuration. \n\n\nThis will helps guarantee that your issue is reproducible.\n  \n\n\nPlease also read \nHow to create a good issue\n\n  and use the \nIssue Summary Template\n\n  when creating new issues.\n\n\n\n\nSimilar Projects\n\n\n\n\nThe Best Online Survey Tools of 2016\n\n\nComparison of Form Building Modules\n\n\nContact\n \n\n\nContact Storage\n\n\nContact module 8.1 and beyond roadmap\n\n\nGoodbye Webform? Contact Forms Are In the Drupal 8 Core\n\n\n\n\n\n\nEform\n\n\nWhen to use Entityform\n\n\n\n\n\n\nWebform\n \n\n\nPort Webform to Drupal 8\n\n\n\n\n\n\n\n\nAuthor/Maintainer\n\n\n\n\nJacob Rockowitz", 
            "title": "Introduction"
        }, 
        {
            "location": "/#table-of-contents", 
            "text": "About this module  Demo  Goals  Concepts  Example  Features  Security  Installation    Releases     Extending  Related Projects  Troubleshooting  Notes  Similar Projects", 
            "title": "Table of Contents"
        }, 
        {
            "location": "/#about-this-module", 
            "text": "The YAML form module is a FAPI based form builder and submission manager for \nDrupal 8.   IMPORTANT: \nThe YAML form module now includes a user interface (UI), which allows \nsite builders to easily build and maintain forms. \nDevelopers are still able to 'view source' and edit a form's  FAPI   Render Array \nusing  YAML .   The primary use case for this module is...   Admin duplicates and customizes an existing form/template.  Admin tests and publishes the new form.  User fills in and submits the form.  Submission is stored in the database.  Admin receives an email notification.   User receives an email confirmation.  Admin views submissions online.  Admin downloads all submissions as a CSV.   Additional things to consider...   Results can be exported as a CSV for use in \n   Google Sheets \n  or  Excel .  The alternatives: \n   Contact  with \n   Contact Storage ,\n   Eform ,\n   Webform ,\n   Form.io ,\n   Google Forms ,\n   SurveyMonky ,\n   Webform.com ,\n   Wufoo ,\n   etc...  How can you help extend and improve this module?", 
            "title": "About this Module"
        }, 
        {
            "location": "/#demo", 
            "text": "Evaluate this project online using  simplytest.me .  Watch a demo  of the YAML form module.", 
            "title": "Demo"
        }, 
        {
            "location": "/#goals", 
            "text": "A stable, maintainable, and tested API for building forms and submission handling.   A pluggable/extensible API for custom submission handling.   A focused and limited feature set to ensure maintainability.", 
            "title": "Goals"
        }, 
        {
            "location": "/#features", 
            "text": "Forms     Create forms using Drupal's Form API (FAPI)  Custom confirmation page, message, and redirection  Reusable and customizable list of common select menu, radios, and checkbox \n  options. This includes countries, states, etc...  Reuse options for autocompletion  Starter templates for common forms  Ability to duplicate existing forms and templates  Prepopulate form with querystring parameters  Support for confidential submissions, which have no recorded IP address\n  and must be submitted while logged out.  Set custom URL aliases for the form and its confirmation page  Preview and save draft support   Elements   Support for every\n   form element \n  included in Drupal 8 core. This includes file uploads and entity references.  Conditional logic using  FAPI States API  Input masks (using  jquery.inputmask )  Private elements  Unique element values  Define optional display format for individual elements.   For example, checkboxes can display as comma delimited value or a bullet list.    Provide custom form elements, including...  HTML source CodeMirror editor  YAML source CodeMirror editor  Text source CodeMirror editor  Credit card number  Email confirmation  Select other  Radios other  Checkboxes other  Composite used for contacts and addresses  Likert scale    Support for form functionality and elements provided by contrib modules \n  including\n   Honeypot ,\n   Mollom ,\n   CAPTCHA ,\n   Validators ,\n  and more to come...   Submissions/Results   View submissions as HTML, plain text, and YAML  Download results as a CSV to Google Sheets or MS Excel  Fine grain access control by roles and user  Users can view previous submissions  Limit total number of submissions or user specific submissions  Drush support for exporting CSV and purging submissions   Emails/Handlers   Extensible form submission handler plugin    Handles email notifications and confirmations   Preview and resend emails  HTML email (does not require any additional modules)  File attachments (requires  Mail System , only  Swift Mailer  has been tested)    Multistep Form Wizard   Builds multi step forms  Customize previous and next button labels  Optional progress bar     Third Party Settings   Allows contrib modules to define additional settings and behaviors that can be \n  applied to all YAML forms or just one specific YAML form.   Integration   Block integration  Node integration  Token support  YAML and HTML source editor using  CodeMirror   Internationalization   Translation integration  Tracks submission language   Development   Generate test submissions using devel generate and customizable test datasets", 
            "title": "Features"
        }, 
        {
            "location": "/#installation", 
            "text": "Copy/upload the yamlform.module to the modules directory of your Drupal\n   installation.  (optional) Manually install  CodeMirror  and \n     jquery.inputmask \n    into the /libraries directory.\n   If CodeMirror and/or jquery.inputmask is not installed, they will be loaded \n   from  https://cdnjs.com/ .  Enable the 'YAML form' or the 'YAML form UI' module or the in 'Extend'. \n   (/admin/modules)  Setup permissions. (/admin/people/permissions#module-yamlform)  Begin building a new YAML form or duplicate an existing one.\n   (/admin/structure/yamlform)  Publish your new YAML form as a...  Page:  By linking to the published YAML form.\n  (/yamlform/contact)    Node:  By creating a new node that references the YAML form.\n  (/node/add/yamlform)  Block:  By placing a YAML form block on your site.\n  (/admin/structure/block)     Notes   Tokens are supported and actively used by the YAML form module. \n  It is recommended that the  Token module  is installed.  For email file attachment support please install and configure the \n   Mail System  and \n   Swift Mailer  modules.", 
            "title": "Installation"
        }, 
        {
            "location": "/#releases", 
            "text": "Even though, the YAML form module is still under active development with\nregular  beta releases \nall YAML form configuration and submission data will be maintained and updated \nbetween releases.   APIs can and will be changing  while this module moves \nfrom beta release and finally a release candidate.   Simply put it, if you install and use the YAML form module AS-IS, out of the \nbox, you  should  be okay.  Once you start extending YAML forms with plugins, \nalter  hooks, and template overrides, you will need to read the release notes \nand assume  things will be changing .", 
            "title": "Releases"
        }, 
        {
            "location": "/#extending", 
            "text": "YAML form provides a YamlFormHandler  plugin \nas well as support for third party settings and alter hooks for contrib modules\nto extend and enhance a YAML form.  YamlFormHandler plugin  The YamlFormHandler plugin allows developers to extend a YAML form's elements \nand submission handling. Each YamlFormHandler plugin should live in a dedicated \nmodule and handler namespace. For example, if a developer wanted to setup \nMailChimp integration, they would create the YAML form MailChimp module \n(yamlform_mailchimp.module) which would contain the YamlFormMailChimpHandler.  This approach/pattern will allow any popular YamlFormHandler plugins\n(that include tests) to be easily contributed back to the main YAML form module.  Third Party Settings  The YAML form module allows contrib modules to also set third party settings\nfor all YAML forms and/or one specific YAML form.    See the yamlform_test_third_party_settings.module for an example of how a\ncontrib can use third party settings to extend and enhance a YAML form.", 
            "title": "Extending"
        }, 
        {
            "location": "/#related-projects", 
            "text": "Below are additional projects that extend and provide additional YAML form \nfeatures and functionality.   YAML Form Queue \n  Provides a queue handler for YAML Form to store form submissions in a queue.", 
            "title": "Related Projects"
        }, 
        {
            "location": "/#notes", 
            "text": "Element names will be used to store data.  Duplicate element names are not allowed.  The  #tree  \n  property, which is used to allow collections of form elements, is not allowed.  Element callback properties are not supported within a YAML element.\n  This includes  #element_validate ,  #after_build ,  #post_render ,  #pre_render ,  #process ,  #submit ,  #value_callback , and  #validate .  Once there has been a form submission, existing element names should never be\n  deleted, they can be be hidden (via  '#access': false ).", 
            "title": "Notes"
        }, 
        {
            "location": "/#troubleshooting", 
            "text": "How to debug issues with YAML form elements/elements?   A YAML form's element data is just a  Form API(FAPI) \n   render array .   Some issues can be fixed by reading the API documentation associated \n  with a given  form element .\n  Links to a form element's API documentation is include in the Elements \n  overview. (/admin/structure/yamlform/settings/elements)   How to get help fixing issues with the YAML form module?   Review the YAML form module's  issue queue  \n  for similar issues.  If you need to create a new issue,  please  create and export an example of \n  the broken YAML form configuration.   This will helps guarantee that your issue is reproducible.     Please also read  How to create a good issue \n  and use the  Issue Summary Template \n  when creating new issues.", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/#similar-projects", 
            "text": "The Best Online Survey Tools of 2016  Comparison of Form Building Modules  Contact    Contact Storage  Contact module 8.1 and beyond roadmap  Goodbye Webform? Contact Forms Are In the Drupal 8 Core    Eform  When to use Entityform    Webform    Port Webform to Drupal 8", 
            "title": "Similar Projects"
        }, 
        {
            "location": "/#authormaintainer", 
            "text": "Jacob Rockowitz", 
            "title": "Author/Maintainer"
        }, 
        {
            "location": "/videos/", 
            "text": "Site Builder Preview\n\n\n\n  \n\n\n\n\n\n\n\nDeveloper Preview", 
            "title": "Videos"
        }, 
        {
            "location": "/videos/#site-builder-preview", 
            "text": "", 
            "title": "Site Builder Preview"
        }, 
        {
            "location": "/videos/#developer-preview", 
            "text": "", 
            "title": "Developer Preview"
        }, 
        {
            "location": "/screenshots/", 
            "text": "Below are some screenshots of the YAML form module's administrative interface,\nform templates, and supported elements.\n\n\nManage Forms\n\n\n\n\nBasic Contact Form\n\n\n\n\nManage Contact Form\n\n\n\n\nEdit Contact Form Element\n\n\n\n\nEdit Contact Form Source\n\n\n\n\nConfigure Contact Form Emails\n\n\n\n\nManage Contact Form Access\n\n\n\n\nEdit Contact Form Settings\n\n\n\n\nView Contact Form Submissions\n\n\n\n\nDownload Contact Form Submissions\n\n\n\n\nExamples of Supported Elements\n\n\n\n\nExample of Composite Element\n\n\n\n\nExamples of Supported Contrib Modules\n\n\n\n\nWizard (Multi-step) Form\n\n\n\n\nManage Wizard (Multi-step) Form", 
            "title": "Screenshots"
        }, 
        {
            "location": "/screenshots/#manage-forms", 
            "text": "", 
            "title": "Manage Forms"
        }, 
        {
            "location": "/screenshots/#basic-contact-form", 
            "text": "", 
            "title": "Basic Contact Form"
        }, 
        {
            "location": "/screenshots/#manage-contact-form", 
            "text": "", 
            "title": "Manage Contact Form"
        }, 
        {
            "location": "/screenshots/#edit-contact-form-element", 
            "text": "", 
            "title": "Edit Contact Form Element"
        }, 
        {
            "location": "/screenshots/#edit-contact-form-source", 
            "text": "", 
            "title": "Edit Contact Form Source"
        }, 
        {
            "location": "/screenshots/#configure-contact-form-emails", 
            "text": "", 
            "title": "Configure Contact Form Emails"
        }, 
        {
            "location": "/screenshots/#manage-contact-form-access", 
            "text": "", 
            "title": "Manage Contact Form Access"
        }, 
        {
            "location": "/screenshots/#edit-contact-form-settings", 
            "text": "", 
            "title": "Edit Contact Form Settings"
        }, 
        {
            "location": "/screenshots/#view-contact-form-submissions", 
            "text": "", 
            "title": "View Contact Form Submissions"
        }, 
        {
            "location": "/screenshots/#download-contact-form-submissions", 
            "text": "", 
            "title": "Download Contact Form Submissions"
        }, 
        {
            "location": "/screenshots/#examples-of-supported-elements", 
            "text": "", 
            "title": "Examples of Supported Elements"
        }, 
        {
            "location": "/screenshots/#example-of-composite-element", 
            "text": "", 
            "title": "Example of Composite Element"
        }, 
        {
            "location": "/screenshots/#examples-of-supported-contrib-modules", 
            "text": "", 
            "title": "Examples of Supported Contrib Modules"
        }, 
        {
            "location": "/screenshots/#wizard-multi-step-form", 
            "text": "", 
            "title": "Wizard (Multi-step) Form"
        }, 
        {
            "location": "/screenshots/#manage-wizard-multi-step-form", 
            "text": "", 
            "title": "Manage Wizard (Multi-step) Form"
        }, 
        {
            "location": "/todo/", 
            "text": "Todo\n\n\n\n\nReview caching strategy, including tags and contexts.\n\n\n\n\nTests\n\n\n\n\nAdditional test coverage\n\n\nImprove test performance\n\n\nImplement more PHPUnit and KernelTestBase tests\n\n\nMissing Tests\n\n\n\\Drupal\\yamlform\\Controller\\YamlFormOptionsController::autocomplete\n\n\nsrc/Plugin/Field\n\n\n\\Drupal\\yamlform\\Plugin\\Field\\FieldFormatter\\YamlFormEntityReferenceEntityFormatter\n\n\n\\Drupal\\yamlform\\Plugin\\Field\\FieldType\\YamlFormEntityReferenceItem\n\n\n\\Drupal\\yamlform\\Plugin\\Field\\FieldWidget\\EntityReferenceAutocompleteWidget\n\n\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\n\n\n\nShould submitted values be casted to datatypes?\n\n  For example, should number elements be casted to integers.\n\n\n\n\n\n\nShould we support private file uploads?  \n\n\n\n\n\n\nHow should handlers deal with their global settings?\n\n\n\n\n\n\nIs the YamlForm entity doing too much?", 
            "title": "Todo"
        }, 
        {
            "location": "/todo/#todo", 
            "text": "Review caching strategy, including tags and contexts.", 
            "title": "Todo"
        }, 
        {
            "location": "/todo/#tests", 
            "text": "Additional test coverage  Improve test performance  Implement more PHPUnit and KernelTestBase tests  Missing Tests  \\Drupal\\yamlform\\Controller\\YamlFormOptionsController::autocomplete  src/Plugin/Field  \\Drupal\\yamlform\\Plugin\\Field\\FieldFormatter\\YamlFormEntityReferenceEntityFormatter  \\Drupal\\yamlform\\Plugin\\Field\\FieldType\\YamlFormEntityReferenceItem  \\Drupal\\yamlform\\Plugin\\Field\\FieldWidget\\EntityReferenceAutocompleteWidget", 
            "title": "Tests"
        }, 
        {
            "location": "/todo/#questions", 
            "text": "Should submitted values be casted to datatypes? \n  For example, should number elements be casted to integers.    Should we support private file uploads?      How should handlers deal with their global settings?    Is the YamlForm entity doing too much?", 
            "title": "Questions"
        }, 
        {
            "location": "/roadmap/", 
            "text": "Below is the current roadmap for the YAML form module.\n\n\n\u2605 Indicates areas that I need help with. \n\n\nPhase I (before Release Candidate)\n\n\nForms \n Elements\n\n\nFinalize elements\n\n\n\n\n#pattern support with regex validation \n\n\nAutocompletion element \n property support\n\n\nEntity query / Views entity reference support for #options \n\n\n[#2346973] \n\n\n\n\n\n\nSelect2 support. \n\n\n[#2758671]\n\n\n\n\n\n\n\n\nUser Interface\n\n\n\n\nBuild #options UI. \n\n\n[#2759527]\n\n\n\n\n\n\nBuild #states (conditional logic) UI. \n\n\n[#2764503]\n\n\n\n\n\n\n\n\nDesign \n UX\n\n\nTemplating \u2605\n\n\n\n\nReview and finalize templates \n\n\n[#2757991]\n\n\n\n\n\n\nSupport for multi column responsive layouts. (ie 2 column form)\n\n\n\n\nExamples \n Templates\n\n\n\n\nAdd better documentation to yamlform_examples.module\n\n\nReview out-of-the-box templates provide by the yamlform_templates.module.\n\n\n\n\nCode \n APIs\n\n\nCode Review\n\n\n\n\nTestability\n\n\nRefactorability\n\n\nPlugin definitions \u2605\n\n\nEntity API implementation \u2605\n\n\nForm API implementation \u2605\n\n\n\n\nSecurity Review \u2605\n\n\n\n\nCallback injection\n\n\nJS/CSS injection\n\n\nAccess controls\n\n\n\n\nAPI Review\n\n\n\n\nReview doc blocks\n\n\n\n\nLibraries\n\n\n\n\nFinalize external library support \n\n\n[#2745325]\n\n\n\n\n\n\nAdd external libraries to composer.json \u2605\n\n\n\n\nTesting\n\n\n\n\nRefactor PHPUnit tests\n\n\nImprove SimpleTest setUp performance.\n\n\nConfiguration Management\n\n\nDefault configuration\n\n\nFinalize default admin settings\n\n\n\n\nMultilingual\n\n\n\n\nFinalize how YAML form's elements are translated. \u2605\n\n\nMake sure the YAML form module is completely translatable. \u2605\n\n\n\n\nDocumentation \n Help\n\n\nGeneral\n\n\n\n\nDecide if any documentation should live on Drupal.org\n\n\nWhat is YAML and why we are using it? \n\n\n[#2759591]\n\n\n\n\n\n\nMove features into a dedicated file.\n\n\nCreate a related project page\n\n\nSimplify the project page.\n\n\nUpdate screenshots\n\n\n\n\nModule\n\n\n\n\nReview hook_help()\n\n\nReview hardcoded messages.\n\n\n\n\nEditorial \u2605\n\n\n\n\nUnified tone\n\n\nGeneral typos, grammar, and wording. \u2605\n\n\n\n\nOther\n\n\nScreencasts\n\n\n\n\nForm Builder - How to build forms?\n\n\nForm Developer - How to customize forms?\n\n\nContributor - How to extend the YAML form API and plugins?\n\n\n\n\nMaintainers/Developer\n\n\n\n\nDocument issue queue policies.\n\n\nBuild full documented plugin examples.\n\n\n\n\nPhase II (after Stable Release)\n\n\nForms\n\n\n\n\nAJAX support for forms \u2605 \n\n\n[#2757491]\n\n\n\n\n\n\n\n\nViews\n\n\n\n\nViews integration \u2605\n\n\n\n\nReporting\n\n\n\n\nCustomizable reports\n\n\nSortable reports \u2605 \n\n\n[#2722601]\n\n\n\n\n\n\n\n\nAPIs\n\n\n\n\nREST API endpoint for CRUD operations.\n\n\nHeadless Drupal Forms\n\n\n\n\nOther\n\n\n\n\nCode snippets repository\n\n\nTemplate repository\n\n\n\n\nWhat Webform \n EntityForm features are currently missing?\n\n\nForm settings\n\n\n\n\nLimit submission by IP and/or cookie.\n\n\nResetting sid per form.\n\n\n\n\nResults\n\n\n\n\nAnalysis of submitted data\n\n\nSubmission sorting\n\n\n\n\nDownload\n\n\n\n\nExcel support\n\n\nLast download\n\n\n\n\nSettings\n\n\n\n\nProvide Anonymous Links\n\n\n\n\nNotes\n\n\n\n\nAnalytics and reporting will never be included in the main YAML form module. This should be handled by a dedicated module or third party service.", 
            "title": "Roadmap"
        }, 
        {
            "location": "/roadmap/#phase-i-before-release-candidate", 
            "text": "", 
            "title": "Phase I (before Release Candidate)"
        }, 
        {
            "location": "/roadmap/#forms-elements", 
            "text": "", 
            "title": "Forms &amp; Elements"
        }, 
        {
            "location": "/roadmap/#finalize-elements", 
            "text": "#pattern support with regex validation   Autocompletion element   property support  Entity query / Views entity reference support for #options   [#2346973]     Select2 support.   [#2758671]", 
            "title": "Finalize elements"
        }, 
        {
            "location": "/roadmap/#user-interface", 
            "text": "Build #options UI.   [#2759527]    Build #states (conditional logic) UI.   [#2764503]", 
            "title": "User Interface"
        }, 
        {
            "location": "/roadmap/#design-ux", 
            "text": "", 
            "title": "Design &amp; UX"
        }, 
        {
            "location": "/roadmap/#templating", 
            "text": "Review and finalize templates   [#2757991]    Support for multi column responsive layouts. (ie 2 column form)", 
            "title": "Templating \u2605"
        }, 
        {
            "location": "/roadmap/#examples-templates", 
            "text": "Add better documentation to yamlform_examples.module  Review out-of-the-box templates provide by the yamlform_templates.module.", 
            "title": "Examples &amp; Templates"
        }, 
        {
            "location": "/roadmap/#code-apis", 
            "text": "", 
            "title": "Code &amp; APIs"
        }, 
        {
            "location": "/roadmap/#code-review", 
            "text": "Testability  Refactorability  Plugin definitions \u2605  Entity API implementation \u2605  Form API implementation \u2605", 
            "title": "Code Review"
        }, 
        {
            "location": "/roadmap/#security-review", 
            "text": "Callback injection  JS/CSS injection  Access controls", 
            "title": "Security Review \u2605"
        }, 
        {
            "location": "/roadmap/#api-review", 
            "text": "Review doc blocks", 
            "title": "API Review"
        }, 
        {
            "location": "/roadmap/#libraries", 
            "text": "Finalize external library support   [#2745325]    Add external libraries to composer.json \u2605", 
            "title": "Libraries"
        }, 
        {
            "location": "/roadmap/#testing", 
            "text": "Refactor PHPUnit tests  Improve SimpleTest setUp performance.  Configuration Management  Default configuration  Finalize default admin settings", 
            "title": "Testing"
        }, 
        {
            "location": "/roadmap/#multilingual", 
            "text": "Finalize how YAML form's elements are translated. \u2605  Make sure the YAML form module is completely translatable. \u2605", 
            "title": "Multilingual"
        }, 
        {
            "location": "/roadmap/#documentation-help", 
            "text": "", 
            "title": "Documentation &amp; Help"
        }, 
        {
            "location": "/roadmap/#general", 
            "text": "Decide if any documentation should live on Drupal.org  What is YAML and why we are using it?   [#2759591]    Move features into a dedicated file.  Create a related project page  Simplify the project page.  Update screenshots", 
            "title": "General"
        }, 
        {
            "location": "/roadmap/#module", 
            "text": "Review hook_help()  Review hardcoded messages.", 
            "title": "Module"
        }, 
        {
            "location": "/roadmap/#editorial", 
            "text": "Unified tone  General typos, grammar, and wording. \u2605", 
            "title": "Editorial \u2605"
        }, 
        {
            "location": "/roadmap/#other", 
            "text": "", 
            "title": "Other"
        }, 
        {
            "location": "/roadmap/#screencasts", 
            "text": "Form Builder - How to build forms?  Form Developer - How to customize forms?  Contributor - How to extend the YAML form API and plugins?", 
            "title": "Screencasts"
        }, 
        {
            "location": "/roadmap/#maintainersdeveloper", 
            "text": "Document issue queue policies.  Build full documented plugin examples.", 
            "title": "Maintainers/Developer"
        }, 
        {
            "location": "/roadmap/#phase-ii-after-stable-release", 
            "text": "", 
            "title": "Phase II (after Stable Release)"
        }, 
        {
            "location": "/roadmap/#forms", 
            "text": "AJAX support for forms \u2605   [#2757491]", 
            "title": "Forms"
        }, 
        {
            "location": "/roadmap/#views", 
            "text": "Views integration \u2605", 
            "title": "Views"
        }, 
        {
            "location": "/roadmap/#reporting", 
            "text": "Customizable reports  Sortable reports \u2605   [#2722601]", 
            "title": "Reporting"
        }, 
        {
            "location": "/roadmap/#apis", 
            "text": "REST API endpoint for CRUD operations.  Headless Drupal Forms", 
            "title": "APIs"
        }, 
        {
            "location": "/roadmap/#other_1", 
            "text": "Code snippets repository  Template repository", 
            "title": "Other"
        }, 
        {
            "location": "/roadmap/#what-webform-entityform-features-are-currently-missing", 
            "text": "", 
            "title": "What Webform &amp; EntityForm features are currently missing?"
        }, 
        {
            "location": "/roadmap/#form-settings", 
            "text": "Limit submission by IP and/or cookie.  Resetting sid per form.", 
            "title": "Form settings"
        }, 
        {
            "location": "/roadmap/#results", 
            "text": "Analysis of submitted data  Submission sorting", 
            "title": "Results"
        }, 
        {
            "location": "/roadmap/#download", 
            "text": "Excel support  Last download", 
            "title": "Download"
        }, 
        {
            "location": "/roadmap/#settings", 
            "text": "Provide Anonymous Links", 
            "title": "Settings"
        }, 
        {
            "location": "/roadmap/#notes", 
            "text": "Analytics and reporting will never be included in the main YAML form module. This should be handled by a dedicated module or third party service.", 
            "title": "Notes"
        }, 
        {
            "location": "/issues/", 
            "text": "Issue #1920902: Unable to tidy the bulk export of YamlForm and YamlFormOptions config files \nbecause Drupal's YAML utility is not a service.\n\n\n\n\nIssue #2502195: Regression: Form throws LogicException when trying to render a form with \nobject as an element's default value.\n  \n\n\n\n\nImpacts previewing entity autocomplete elements.\n\n\n\n\n\n\nIssue #2636066: Access control is not applied to config entity queries\n\n\n\n\nYAML forms that the current user can't access are not being hidden via the EntityQuery.\n\n\nSee: Drupal\\yamlform\\YamlFormEntityListBuilder\n\n\n\n\n\n\nIssue #2484693: Telephone Link field formatter breaks Drupal with 5 digits or less in the number\n\n\n\n\nWorkaround is to manually build a static HTML link.\n\n\nSee: \\Drupal\\yamlform\\Plugin\\YamlFormElement\\Telephone::formatHtml\n\n\n\n\n\n\nIssue #2235581: Make Token Dialog support inserting in WYSIWYGs (TinyMCE, CKEditor, etc.)\n\n\n\n\nBlocks tokens from easily being inserted in CodeMirror widget.\n\n\nWorkaround is to disable '#click_insert' functionality from the token\n     dialog.\n\n\n\n\n\n\nConfig entity does NOT support \nEntity Validation API\n.\n\n\n\n\nValidation constraints are only applicable to content entities and fields.\n\n\nIn D8 all config entity validation is handled via \n    \\Drupal\\Core\\Form\\FormInterface::validateForm\n\n\nWorkaround: Create YamlFormEntityElementsValidator service.      \n\n\n\n\n\n\nForms System Issues for Drupal core\n\n\n\n\nIssue #1593964: Allow FAPI usage of the datalist element\n\n\nIssue #1183606: Implement Form API support for new HTML5 elements\n   \n\n\n\n\n\n\nUnable to alter local actions prior to rendering\n\n\n\n\nMakes it impossible to open an action in a dialog.", 
            "title": "Known Issues"
        }, 
        {
            "location": "/maintainers/", 
            "text": "Notes and references for maintainers of the YAML form module.\n\n\nReferences\n\n\n\n\nCreate a project (module or theme) on Drupal.org\n\n\n\n\nCoding Standards\n\n\nThe YAML form module follows all \ncoding standards\n \nestablished by the Drupal community.\n\n\nBelow are all additional standards that should be followed.\n\n\n\n\n[Policy, no patch] PHP 5.4 short array syntax coding standards\n\n  The release.md document includes command to convert all array to use the\n  shorthand syntax.\n\n\n\n\nBecoming a co-maintainer\n\n\nEveryone is welcome to contribute to the YAML form module by posting questions,\nissues, feature requests, and patches to the YAML form module's \nissue queue\n.\nFor the YAML form module to succeed, it needs multiple maintainers to ensure \nthat it is maintainable. \n\n\nPleases read \nBest practices for co-maintaining projects\n\nfor how to become a co-maintainer of YAML form module.\n\n\nBelow are some specific tips and tasks for becoming a co-maintainer of the \nYAML form module\n\n\n\n\n\n\nReview and edit the \ntest script\n which documents every \n  feature and function currently provide by the YAML form module.  \n\n\n\n\n\n\nPost issues and patches to help improve and/or fix this issues with the\n  test script.\n\n\n\n\n\n\nImproving documentation and reviewing the YAML form module's APIs are two key\n  tasks to ensuring that the YAML form module is maintainable.\n\n\n\n\n\n\nReview, improve, and write self documenting SimpleTests and PHPUnit tests.\n\n\n\n\n\n\nWrite a contrib module that extends the YAML form module.\n\n\n\n\n\n\nCode Sources and Design Patterns\n\n\nBelow is where most of the code snippets and/or design pattern were taken from \nto build this module.\n\n\n\n\nUI/Naming convention: Webform module (Copied)\n\n\nYamlForm to YamlFormSubmission bundle: Vocabulary to Term entities\n\n\nYamlFormSubmission entity_type and entity_id: Comment entity\n\n\nYamlFormSubmission preview: CommentForm\n\n\nYamlFormHandler plugin: ImageEffect", 
            "title": "Maintainers"
        }, 
        {
            "location": "/maintainers/#references", 
            "text": "Create a project (module or theme) on Drupal.org", 
            "title": "References"
        }, 
        {
            "location": "/maintainers/#coding-standards", 
            "text": "The YAML form module follows all  coding standards  \nestablished by the Drupal community.  Below are all additional standards that should be followed.   [Policy, no patch] PHP 5.4 short array syntax coding standards \n  The release.md document includes command to convert all array to use the\n  shorthand syntax.", 
            "title": "Coding Standards"
        }, 
        {
            "location": "/maintainers/#becoming-a-co-maintainer", 
            "text": "Everyone is welcome to contribute to the YAML form module by posting questions,\nissues, feature requests, and patches to the YAML form module's  issue queue .\nFor the YAML form module to succeed, it needs multiple maintainers to ensure \nthat it is maintainable.   Pleases read  Best practices for co-maintaining projects \nfor how to become a co-maintainer of YAML form module.  Below are some specific tips and tasks for becoming a co-maintainer of the \nYAML form module    Review and edit the  test script  which documents every \n  feature and function currently provide by the YAML form module.      Post issues and patches to help improve and/or fix this issues with the\n  test script.    Improving documentation and reviewing the YAML form module's APIs are two key\n  tasks to ensuring that the YAML form module is maintainable.    Review, improve, and write self documenting SimpleTests and PHPUnit tests.    Write a contrib module that extends the YAML form module.", 
            "title": "Becoming a co-maintainer"
        }, 
        {
            "location": "/maintainers/#code-sources-and-design-patterns", 
            "text": "Below is where most of the code snippets and/or design pattern were taken from \nto build this module.   UI/Naming convention: Webform module (Copied)  YamlForm to YamlFormSubmission bundle: Vocabulary to Term entities  YamlFormSubmission entity_type and entity_id: Comment entity  YamlFormSubmission preview: CommentForm  YamlFormHandler plugin: ImageEffect", 
            "title": "Code Sources and Design Patterns"
        }, 
        {
            "location": "/development/", 
            "text": "Commands\n\n\nUpdate composer libraries\n\n\ncomposer drupal-update\n\n\n\nApply patch\n\n\ncurl https://www.drupal.org/files/[patch-name].patch | git apply -\n\n\n\nRevert patch\n\n\ncurl https://www.drupal.org/files/[patch-name].patch | git apply -R -\n\n\n\nCreate and manage patches\n\n\n# Create and checkout issue branch\ngit checkout -b [issue-number]-[issue-description]\n\n# Push issue branch to D.O. (optional)\ngit push -u origin [issue-number]-[issue-description]\n\n# Create patch by comparing (current) issue branch with 8.x-1.x branch \ngit diff 8.x-1.x \n [project_name]-[issue-description]-[issue-number]-[comment-number]-[drupal-version].patch\n\n\n\nIgnoring patches (and .gitignore)\n\n\ncat \n .gitignore \n'EOF'\n.gitignore\n*.patch\nEOF\n\n\n\nMerge branch\n\n\n# Merge branch with all commits\ngit checkout 8.x-1.x\ngit merge [issue-number]-[issue-description]\ngit push\n\n# Merge branch as a single new commit\ngit checkout 8.x-1.x\ngit merge --squash [issue-number]-[issue-description]\ngit commit -m 'Issue #[issue-number]: [issue-description]'\ngit push\n\n\n\nDelete issue branch\n\n\n # Delete local issue branch.\n git branch -d [issue-number]-[issue-description]\n\n # Delete remote issue branch.\n git push origin :[issue-number]-[issue-description]\n\n\n\nGitFlow\n Cheatsheet\n\n\n# Create branch\ngit checkout 8.x-1.x\ngit checkout -b [issue-number]-[issue-description]\ngit push -u origin [issue-number]-[issue-description]\n\n# Create patch\ngit diff 8.x-1.x \n [project_name]-[issue-description]-[issue-number]-00.patch\n\n# Merge branch with all commits\ngit checkout 8.x-1.x\ngit merge [issue-number]-[issue-description]\ngit push\n\n# Merge branch as a single new commit\ngit checkout 8.x-1.x\ngit merge --squash [issue-number]-[issue-description]\ngit commit -m 'Issue #[issue-number]: [issue-description]'\ngit push\n\n# Delete branch\ngit branch -D [issue-number]-[issue-description]\ngit push origin :[issue-number]-[issue-description]\n\n\n\nReinstall YAML form module.\n\n\ndrush php-eval 'module_load_include('install', 'yamlform'); yamlform_uninstall();'; drush cron;\ndrush php-eval 'module_load_include('install', 'yamlform_node'); yamlform_node_uninstall();'; drush cron; \ndrush yamlform-purge --all -y; drush pmu -y yamlform_test; drush pmu -y yamlform_examples; drush pmu -y yamlform_templates; drush pmu -y yamlform_ui; drush pmu -y yamlform_node; drush pmu -y  yamlform; \ndrush en -y yamlform yamlform_ui yamlform_test;\n\n# Optional.\ndrush en -y yamlform_examples yamlform_templates yamlform_node;\ndrush pmy -y yamlform_test_third_party_settings yamlform_translation_test;\ndrush en -y yamlform_test_third_party_settings yamlform_translation_test;\n\n\n\nReinstall YAML form test module.\n\n\ndrush yamlform-purge --all -y; drush pmu -y yamlform_test; drush en -y yamlform_test;\n\n\n\nUpdate YAML form configuration using Features module\n\n\n# Show the difference between the active config and the default config.\ndrush features-diff yamlform\ndrush features-diff yamlform_test\n\n# IMPORTANT: \n# YOU MUST FIX *.info.yml WHERE THE DEPENDENCIES DECLARE ITSELF..\n\n# Export and tidy all YAML form configuration from your site.          \ndrush features-export -y yamlform\ndrush features-export -y yamlform_node\ndrush features-export -y yamlform_examples\ndrush features-export -y yamlform_templates\ndrush features-export -y yamlform_test\n\n# Re-import all YAML form configuration into your site.      \ndrush features-import -y yamlform\ndrush features-import -y yamlform_node\ndrush features-import -y yamlform_examples\ndrush features-import -y yamlform_templates\ndrush features-import -y yamlform_test\n\n\n\nInstall extra modules.\n\n\ndrush en -y yamlform captcha honeypot select_or_other;\n\n\n\nCreate test roles and users.\n\n\ndrush role-create developer\ndrush role-add-perm developer 'view the administration theme,access toolbar,access administration pages,access content overview,access yamlform overview,administer yamlform,administer blocks,administer nodes'\ndrush user-create developer --password=\"developer\"\ndrush user-add-role developer developer\n\ndrush role-create admin\ndrush role-add-perm admin 'view the administration theme,access toolbar,access administration pages,access content overview,access yamlform overview,administer yamlform submission'\ndrush user-create admin --password=\"admin\"\ndrush user-add-role admin admin\n\ndrush role-create manager\ndrush role-add-perm manager 'view the administration theme,access toolbar,access administration pages,access content overview,access yamlform overview'\ndrush user-create manager --password=\"manager\"\ndrush user-add-role manager manager\n\ndrush role-create user\ndrush user-create user --password=\"user\"\ndrush user-add-role user user\n\ndrush role-create any\ndrush user-create any --password=\"any\"\ndrush role-add-perm any 'view the administration theme,access administration pages,access toolbar,access yamlform overview,create yamlform,edit any yamlform,delete any yamlform,view yamlform node submissions any node,edit yamlform node submissions any node,delete yamlform node submissions any node'\ndrush user-add-role any any\n\ndrush role-create own\ndrush user-create own --password=\"own\"\ndrush role-add-perm own 'view the administration theme,access administration pages,access toolbar,access yamlform overview,create yamlform,edit own yamlform,delete own yamlform,view yamlform node submissions own node,edit yamlform node submissions own node,delete yamlform node submissions own node'\ndrush user-add-role own own\n\n\n\nCreate test submissions for 'Contact' and 'Example: Elements' form.\n\n\ndrush yamlform-generate contact\ndrush yamlform-generate example_elements\n\n\n\nTest update hooks\n\n\ndrush php-eval 'module_load_include('install', 'yamlform'); ($message = yamlform_update_8001()) ? drupal_set_message($message) : NULL;'\n\n\n\nAccess developer information\n\n\ndrush role-add-perm anonymous 'access devel information'\ndrush role-add-perm authenticated 'access devel information'\n\n\n\nUpdate composer packages\n\n\ncomposer drupal-update\n\n\n\nReinstall\n\n\ndrush -y site-install\\\n  --account-mail=\"example@example.com\"\\\n  --account-name=\"webmaster\"\\\n  --account-pass=\"drupal.admin\"\\\n  --site-mail=\"example@example.com\"\\\n  --site-name=\"Drupal 8 (dev)\";\n\n# Enable core modules\ndrush -y pm-enable\\\n  book\\\n  simpletest\\\n  telephone\\\n  language\\\n  locale\\\n  content_translation\\\n  config_translation;\n\n# Disable core modules\ndrush -y pm-uninstall\\\n  update;\n\n# Enable contrib modules\ndrush -y pm-enable\\\n  devel\\\n  devel_generate\\\n  kint\\\n  webprofiler\\\n  yamlform\\\n  yamlform_test\\\n  yamlform_translation_test;\n\n\n\nCode Sources and Design Patterns\n\n\nBelow is just a reference to where most of the code snippets and/or \ndesign pattern were taken from to build this module.\n\n\n\n\nUI/Naming convention: Webform module (Copied)\n\n\nYamlForm to YamlFormSubmission bundle: Vocabulary to Term entities\n\n\nYamlFormSubmission entity_type and entity_id: Comment entity\n\n\nYamlFormSubmission preview: CommentForm\n\n\nYamlFormHandler plugin: ImageEffect\n\n\nYamlFormEntityReferenceItem field type: FileItem", 
            "title": "Development"
        }, 
        {
            "location": "/development/#commands", 
            "text": "", 
            "title": "Commands"
        }, 
        {
            "location": "/development/#update-composer-libraries", 
            "text": "composer drupal-update", 
            "title": "Update composer libraries"
        }, 
        {
            "location": "/development/#apply-patch", 
            "text": "curl https://www.drupal.org/files/[patch-name].patch | git apply -", 
            "title": "Apply patch"
        }, 
        {
            "location": "/development/#revert-patch", 
            "text": "curl https://www.drupal.org/files/[patch-name].patch | git apply -R -", 
            "title": "Revert patch"
        }, 
        {
            "location": "/development/#create-and-manage-patches", 
            "text": "# Create and checkout issue branch\ngit checkout -b [issue-number]-[issue-description]\n\n# Push issue branch to D.O. (optional)\ngit push -u origin [issue-number]-[issue-description]\n\n# Create patch by comparing (current) issue branch with 8.x-1.x branch \ngit diff 8.x-1.x   [project_name]-[issue-description]-[issue-number]-[comment-number]-[drupal-version].patch", 
            "title": "Create and manage patches"
        }, 
        {
            "location": "/development/#ignoring-patches-and-gitignore", 
            "text": "cat   .gitignore  'EOF'\n.gitignore\n*.patch\nEOF", 
            "title": "Ignoring patches (and .gitignore)"
        }, 
        {
            "location": "/development/#merge-branch", 
            "text": "# Merge branch with all commits\ngit checkout 8.x-1.x\ngit merge [issue-number]-[issue-description]\ngit push\n\n# Merge branch as a single new commit\ngit checkout 8.x-1.x\ngit merge --squash [issue-number]-[issue-description]\ngit commit -m 'Issue #[issue-number]: [issue-description]'\ngit push", 
            "title": "Merge branch"
        }, 
        {
            "location": "/development/#delete-issue-branch", 
            "text": "# Delete local issue branch.\n git branch -d [issue-number]-[issue-description]\n\n # Delete remote issue branch.\n git push origin :[issue-number]-[issue-description]", 
            "title": "Delete issue branch"
        }, 
        {
            "location": "/development/#gitflow-cheatsheet", 
            "text": "# Create branch\ngit checkout 8.x-1.x\ngit checkout -b [issue-number]-[issue-description]\ngit push -u origin [issue-number]-[issue-description]\n\n# Create patch\ngit diff 8.x-1.x   [project_name]-[issue-description]-[issue-number]-00.patch\n\n# Merge branch with all commits\ngit checkout 8.x-1.x\ngit merge [issue-number]-[issue-description]\ngit push\n\n# Merge branch as a single new commit\ngit checkout 8.x-1.x\ngit merge --squash [issue-number]-[issue-description]\ngit commit -m 'Issue #[issue-number]: [issue-description]'\ngit push\n\n# Delete branch\ngit branch -D [issue-number]-[issue-description]\ngit push origin :[issue-number]-[issue-description]", 
            "title": "GitFlow Cheatsheet"
        }, 
        {
            "location": "/development/#reinstall-yaml-form-module", 
            "text": "drush php-eval 'module_load_include('install', 'yamlform'); yamlform_uninstall();'; drush cron;\ndrush php-eval 'module_load_include('install', 'yamlform_node'); yamlform_node_uninstall();'; drush cron; \ndrush yamlform-purge --all -y; drush pmu -y yamlform_test; drush pmu -y yamlform_examples; drush pmu -y yamlform_templates; drush pmu -y yamlform_ui; drush pmu -y yamlform_node; drush pmu -y  yamlform; \ndrush en -y yamlform yamlform_ui yamlform_test;\n\n# Optional.\ndrush en -y yamlform_examples yamlform_templates yamlform_node;\ndrush pmy -y yamlform_test_third_party_settings yamlform_translation_test;\ndrush en -y yamlform_test_third_party_settings yamlform_translation_test;", 
            "title": "Reinstall YAML form module."
        }, 
        {
            "location": "/development/#reinstall-yaml-form-test-module", 
            "text": "drush yamlform-purge --all -y; drush pmu -y yamlform_test; drush en -y yamlform_test;", 
            "title": "Reinstall YAML form test module."
        }, 
        {
            "location": "/development/#update-yaml-form-configuration-using-features-module", 
            "text": "# Show the difference between the active config and the default config.\ndrush features-diff yamlform\ndrush features-diff yamlform_test\n\n# IMPORTANT: \n# YOU MUST FIX *.info.yml WHERE THE DEPENDENCIES DECLARE ITSELF..\n\n# Export and tidy all YAML form configuration from your site.          \ndrush features-export -y yamlform\ndrush features-export -y yamlform_node\ndrush features-export -y yamlform_examples\ndrush features-export -y yamlform_templates\ndrush features-export -y yamlform_test\n\n# Re-import all YAML form configuration into your site.      \ndrush features-import -y yamlform\ndrush features-import -y yamlform_node\ndrush features-import -y yamlform_examples\ndrush features-import -y yamlform_templates\ndrush features-import -y yamlform_test", 
            "title": "Update YAML form configuration using Features module"
        }, 
        {
            "location": "/development/#install-extra-modules", 
            "text": "drush en -y yamlform captcha honeypot select_or_other;", 
            "title": "Install extra modules."
        }, 
        {
            "location": "/development/#create-test-roles-and-users", 
            "text": "drush role-create developer\ndrush role-add-perm developer 'view the administration theme,access toolbar,access administration pages,access content overview,access yamlform overview,administer yamlform,administer blocks,administer nodes'\ndrush user-create developer --password=\"developer\"\ndrush user-add-role developer developer\n\ndrush role-create admin\ndrush role-add-perm admin 'view the administration theme,access toolbar,access administration pages,access content overview,access yamlform overview,administer yamlform submission'\ndrush user-create admin --password=\"admin\"\ndrush user-add-role admin admin\n\ndrush role-create manager\ndrush role-add-perm manager 'view the administration theme,access toolbar,access administration pages,access content overview,access yamlform overview'\ndrush user-create manager --password=\"manager\"\ndrush user-add-role manager manager\n\ndrush role-create user\ndrush user-create user --password=\"user\"\ndrush user-add-role user user\n\ndrush role-create any\ndrush user-create any --password=\"any\"\ndrush role-add-perm any 'view the administration theme,access administration pages,access toolbar,access yamlform overview,create yamlform,edit any yamlform,delete any yamlform,view yamlform node submissions any node,edit yamlform node submissions any node,delete yamlform node submissions any node'\ndrush user-add-role any any\n\ndrush role-create own\ndrush user-create own --password=\"own\"\ndrush role-add-perm own 'view the administration theme,access administration pages,access toolbar,access yamlform overview,create yamlform,edit own yamlform,delete own yamlform,view yamlform node submissions own node,edit yamlform node submissions own node,delete yamlform node submissions own node'\ndrush user-add-role own own", 
            "title": "Create test roles and users."
        }, 
        {
            "location": "/development/#create-test-submissions-for-contact-and-example-elements-form", 
            "text": "drush yamlform-generate contact\ndrush yamlform-generate example_elements", 
            "title": "Create test submissions for 'Contact' and 'Example: Elements' form."
        }, 
        {
            "location": "/development/#test-update-hooks", 
            "text": "drush php-eval 'module_load_include('install', 'yamlform'); ($message = yamlform_update_8001()) ? drupal_set_message($message) : NULL;'", 
            "title": "Test update hooks"
        }, 
        {
            "location": "/development/#access-developer-information", 
            "text": "drush role-add-perm anonymous 'access devel information'\ndrush role-add-perm authenticated 'access devel information'", 
            "title": "Access developer information"
        }, 
        {
            "location": "/development/#update-composer-packages", 
            "text": "composer drupal-update", 
            "title": "Update composer packages"
        }, 
        {
            "location": "/development/#reinstall", 
            "text": "drush -y site-install\\\n  --account-mail=\"example@example.com\"\\\n  --account-name=\"webmaster\"\\\n  --account-pass=\"drupal.admin\"\\\n  --site-mail=\"example@example.com\"\\\n  --site-name=\"Drupal 8 (dev)\";\n\n# Enable core modules\ndrush -y pm-enable\\\n  book\\\n  simpletest\\\n  telephone\\\n  language\\\n  locale\\\n  content_translation\\\n  config_translation;\n\n# Disable core modules\ndrush -y pm-uninstall\\\n  update;\n\n# Enable contrib modules\ndrush -y pm-enable\\\n  devel\\\n  devel_generate\\\n  kint\\\n  webprofiler\\\n  yamlform\\\n  yamlform_test\\\n  yamlform_translation_test;", 
            "title": "Reinstall"
        }, 
        {
            "location": "/development/#code-sources-and-design-patterns", 
            "text": "Below is just a reference to where most of the code snippets and/or \ndesign pattern were taken from to build this module.   UI/Naming convention: Webform module (Copied)  YamlForm to YamlFormSubmission bundle: Vocabulary to Term entities  YamlFormSubmission entity_type and entity_id: Comment entity  YamlFormSubmission preview: CommentForm  YamlFormHandler plugin: ImageEffect  YamlFormEntityReferenceItem field type: FileItem", 
            "title": "Code Sources and Design Patterns"
        }, 
        {
            "location": "/test/", 
            "text": "This is a step-by-step guide for manually testing and reviewing every feature,\nrole/permission, and use case provided by the YAML form module.\n\n\nNotes\n\n\n\n\nContact form will be used for most examples.\n\n\nIncognito tab is the quickest way to test anonymous access to a form/feature.\n\n\n\n\n\n\nInstallation\n\n\n\n\nUpdate settings.php to allow the yamlform_test.module to be installed.\n\n\n$settings['extension_discovery_scan_tests'] = TRUE;\n\n\nEnable the YAML form and YAML form test module.\n\n\n\n\n\n\nSetup\n\n\nSee: development-tools.md for commands.\n\n\n\n\nCreate test roles and users.\n\n\nCreate test submissions.\n\n\n\n\n\n\nAdministration\n\n\nForms (/admin/structure/yamlform)\n\n\n\n\nReview forms provided by the yamlform.module and yamlform_test.module\n\n\nTest filter\n\n\nFilter a title, description, and/or elements (which is not visible)\n\n\n\n\n\n\nTest sorting\n\n\nElements validation\n\n\nRequired: Leave blank\n\n\nValid YAML: Enter invalid YAML\n\n\nIs array: Enter simple string value\n\n\nDuplicate elements name: Enter two elements with the same names\n\n\nIgnore properties: Enter element with #tree, #submit, etc... properties.\n\n\n\n\n\n\n\n\nResults\n \n\n\nManage (/admin/structure/yamlform/results/manage)\n\n\n\n\nReview submissions\n\n\nTest filter\n\n\nFilter by submission data (which is not visible)\n\n\n\n\n\n\nTest sorting\n\n\n\n\nPurge (/admin/structure/yamlform/results/purge)\n\n\n\n\nTest purging less than 1000 submissions without batch processing.\n\n\nTest purging more than 1000 submissions with batch processing.\n\n\n\n\nAdmin settings (/admin/structure/yamlform/settings)\n\n\n\n\nReview default values\n\n\nReview labels and descriptions\n\n\nTest updating values\n\n\nTest optional token support\n\n\n\n\nYAML form options (/admin/structure/yamlform/settings/options/manage)\n\n\n\n\nReview default YAML form options\n\n\nCreate, update, and delete YAML form options\n\n\n\n\nYAML form elements (/admin/structure/yamlform/settings/elements)\n\n\n\n\nReview YAML form element titles and descriptions.\n\n\n\n\nYAML form handlers (/admin/structure/yamlform/settings/handlers)\n\n\n\n\nReview YAML form handler titles and descriptions.\n\n\n\n\n\n\nForms\n\n\n(/admin/structure/yamlform)\n\n\nCreate new YAML form (/admin/structure/yamlform/add)\n\n\n\n\nCheck default elements\n\n\nTest duplicate link\n\n\nMessage about previous submissions should be displayed\n\n\n\n\nDuplicate existing YAML form (/admin/structure/yamlform/manage/template_registration/duplicate)\n\n\n\n\nDuplicate a 'Template: Registration' form.\n\n\nConfirm all elements and settings are duplicated.\n\n\n\n\nTest YAML form elements (/yamlform/example_elements/test)\n\n\n\n\nTest 'kitchen sink' list of supported elements\n\n\nVerify each element collects and displays submitted data correctly\n\n\n\n\nTest YAML form elements with custom elements (/yamlform/example_elements_formats/test)\n\n\n\n\nTest elements have customized formats\n\n\nVerify HTML and text display for submitted data\n\n\n\n\nYAML form (/yamlform/contact)\n\n\n\n\nCheck system path (/yamlform/contact)\n\n\nCheck submit alias (/form/contact)\n\n\nCheck confirmation alias (/form/contact/confirmation)\n\n\nThis page is not used by the form which redirects to the homepage.\n\n\n\n\n\n\n\n\nYAML form settings (/admin/structure/yamlform/manage/contact/settings)\n\n\n\n\nReview form\n\n\nReview hide/show logic (ie #States API).\n\n\nReview default values\n\n\nReview help text\n\n\n\n\nYAML form access (/admin/structure/yamlform/manage/contact/access)\n\n\nSee: Access Rules \n\n\nYAML form handlers (/admin/structure/yamlform/manage/contact/handlers)\n\n\n\n\nTest contact form handlers\n\n\nCreate, update, and delete YAML form handler\n\n\nCheck that cardinality is support\n\n\nEmail handler support multiple instances\n\n\nNull and Test handler only support a single instance\n\n\n\n\n\n\nTest disabling a handler\n\n\n\n\nYAML form email handlers (/admin/structure/yamlform/manage/contact/handlers)\n\n\n\n\nTest email handlers\n\n\nTest debug setting\n\n\n\n\n\n\nWizard\n\n\nYAML form wizard\n (/form/example-wizard)\n\n\n\n\nCheck progress bar\n\n\nCheck data automatically saved between pages\n\n\nCheck reloading form returns to the current page\n\n\nReview preview\n\n\nReview confirmation\n\n\nCheck default wizard previous and next button labels \n  (/admin/structure/yamlform/settings)\n\n\nCheck YAML form previous and next button labels \n  (/admin/structure/yamlform/manage/example_wizard/settings)\n\n\nCheck adding \n#previous_button_label\n and \n#next_button_label\n to \n  \nwizard_page\n (/admin/structure/yamlform/manage/example_wizard)\n\n\n\n\n\n\nThird Party Settings\n\n\nYAML form global third party settings\n (/admin/structure/yamlform/manage/contact/third-party)\n\n\n\n\nCheck no modules installed message\n\n\nEnable yamlform_test_third_party_settings.module\n\n\nAdd global message\n\n\nCheck global message is display on Contact form (/yamlform/contact)\n\n\n\n\nYAML form specific third party settings\n (/admin/structure/yamlform/manage/contact/third-party)\n\n\n\n\nCheck no modules installed message\n\n\nEnable yamlform_test_third_party_settings.module\n\n\nAdd message\n\n\nCheck form specific message is display on Contact form (/yamlform/contact)\n\n\n\n\n\n\nResults\n\n\nSubmissions (/admin/structure/yamlform/manage/contact/results/submissions)\n\n\n\n\nCheck submission columns\n\n\nCheck sorting\n\n\nTest filter\n\n\nFilter by submission data (which is not visible)\n\n\n\n\n\n\n\n\nTable (/admin/structure/yamlform/manage/contact/results/table)\n\n\n\n\nCheck elements columns (which are not sortable)\n\n\nCheck 'Example: Elements'\n\n\n/admin/structure/yamlform/manage/example_elements/results/table\n\n\n\n\n\n\n\n\nDownload (/admin/structure/yamlform/manage/contact/results/download)\n\n\n\n\nUnchecking 'Download CSV' allows you to view the CSV as plain text.\n\n\n'Download CSV' is only available when there is less than 1000 submissions.\n\n\n\n\n\n\nCheck generating CSV using batch processing\n\n\nSet batch limit to 1. (/admin/structure/yamlform/settings)\n\n\nDownload CSV (/admin/structure/yamlform/manage/contact/results/download)\n\n\n\n\n\n\n\n\nClear (/admin/structure/yamlform/manage/contact/results/clear)\n\n\n\n\nTest clearing submissions.\n\n\n\n\nSubmission (/admin/structure/yamlform/manage/contact/results/submissions)\n\n\nView tab\n\n\n\n\nTest submission navigation\n\n\n\n\nHTML\n\n\n\n\nView submission as HTML\n\n\n\n\nPlain text\n\n\n\n\nView submission as plain text\n\n\n\n\nData (YAML)\n\n\n\n\nView submission as data (YAML)\n\n\n\n\nEdit tab\n\n\n\n\nEdit submission\n\n\nSimple confirmation message should always be displayed\n\n\n\n\n\n\nFeatures\n\n\nElements\n\n\n\n\nAll elements (/yamlform/test_element)\n\n\nDate elements (/yamlform/test_element_dates)\n\n\nEntity autocomplete (/yamlform/test_element_entity_autocomplete)\n\n\nPreview is broken and throwing serialization error.\n\n\n\n\n\n\nText format (/yamlform/test_element_text_format)\n\n\nIgnored properties (/yamlform/test_element_ignored_properties)\n\n\n\n\nClosed (/yamlform/test_form_closed)\n\n\n\n\nCheck that form is closed for anonymous user\n\n\nCheck that form is available to admin user but displays are warning.\n\n\n\n\nPrepopulate (/yamlform/test_form_prepopulate)\n\n\n\n\nCheck that name is prepopulated using query string variable.\n\n\n\n\nConfidential submissions (/yamlform/test_form_confidential)\n\n\n\n\nCheck that form can only be accessed when logged out.\n\n\nCheck that IP address is not saved with submission.\n\n\n\n\nSubmit text (/yamlform/test_form_submit_text)\n\n\n\n\nCheck that submit text is customized.\n\n\n\n\nPreview (/yamlform/test_form_preview)\n\n\n\n\nCheck custom preview and next submission buttons.\n\n\nCheck custom preview message.\n\n\nCheck optional and required preview.\n\n\n\n\nDraft (/yamlform/test_form_draft)\n\n\n\n\nCheck saving and reloading draft\n\n\nCheck autosave occurs with validation errors.\n\n\nCheck autosave occurs when previewing.\n\n\n\n\nConfirmation\n\n\n\n\nInline (/yamlform/test_confirmation_inline)\n\n\nMessage (/yamlform/test_confirmation_message)\n\n\nPage (/yamlform/test_confirmation_page)\n\n\nURL (/yamlform/test_confirmation_url)\n\n\n\n\nLimits (/yamlform/test_submission_limit)\n\n\n\n\nCheck only 1 submission is allowed for authenticated user.\n\n\nCheck only 3 submission are allowed for all users.\n\n\nCheck that admin can post new submission if their limit has no been reached.\n\n\n\n\nResults Disabled (/yamlform/test_submission_disabled)\n\n\n\n\nCheck that results can be disabled. (Applies to users)\n\n\n\n\nPrivate element access (/yamlform/test_element_private)\n\n\n\n\nCheck that element with #private property is only accessible to submission administrators.\n\n\n\n\nUnique element property (/yamlform/test_element_unique)\n\n\n\n\nCheck that element with #unique property can't have same value submitted twice.\n\n\nCheck that existing submission can be updated. \n\n\n\n\n\n\nPermissions\n\n\n\n\nCreate test roles and users. (See development.md)\n\n\n\n\nAccount/Roles\n\n\n\n\ndeveloper: Administer YAML forms and YAML form submissions.\n\n\nadmin: Administer YAML form submissions.\n\n\nmanager: Used to test managing a YAML form's submissions.\n\n\nuser: Used to test accessing and managing one's own submission.\n\n\nany: Manage any YAML form and YAML form node submissions.\n\n\nown: Manage own YAML form and YAML form node submissions.\n\n\n\n\nCreate own YAML form\n\n\n\n\nLogin as own/own.\n\n\nCheck that 'YAML form overview' is accessible. (/admin/structure/yamlform)\n\n\nCheck add YAML form (/admin/structure/yamlform/add)\n\n\nCall new YAML form 'own'\n\n\nCheck adding element (/admin/structure/yamlform/manage/own)\n\n\nCheck duplicating 'own' YAML form.\n\n\nCall new YAML form 'duplicate'\n\n\nCheck deleting 'duplicate' YAML form (/admin/structure/yamlform/manage/duplicate/delete)\n\n\nCheck that 'Templates' are available and can be previewed. (/admin/structure/yamlform/templates)\n\n\n\n\nManage own YAML form\n\n\n\n\nCreate test YAML form submission on 'own' form (/yamlform/own/test)\n\n\nCheck that submission is accessible and editable.\n\n\n\n\nManaging any YAML form\n\n\n\n\nLogin as any/any.\n\n\nCheck that all YAML forms and results are available. (/admin/structure/yamlform)\n\n\nCheck that YAML form global settings are hidden.\n\n\nCheck add YAML form (/admin/structure/yamlform/add)\n\n\nCall new YAML form 'any'\n\n\n\n\nChanging YAML form author\n\n\n\n\nLogin as developer/developer.\n\n\nChange YAML form author from 'any' to 'own' at the very bottom of YAML form's \n  settings. (/admin/structure/yamlform/any/settings)\n\n\nLogin as own/own.\n\n\nCheck that 'any' YAML form is accessible. (/admin/structure/yamlform/any)\n\n\n\n\nDuplicating YAML form\n\n\n\n\nLogin as own/own.\n\n\nCheck that 'own' user can't duplicate a YAML form that they can't update. \n  (/admin/structure/yamlform/manage/contact/duplicate)\n\n\nReturns 'Access denied'.\n\n\n\n\n\n\n\n\n\n\nYAML form Access Rules\n\n\n\n\nCreate test roles and users. (See development.md)\n\n\n\n\nAccount/Roles\n\n\n\n\ndeveloper: Administer YAML forms and YAML form submissions.\n\n\nadmin: Administer YAML form submissions.\n\n\nmanager: Used to test managing a YAML form's submissions.\n\n\nuser: Used to test accessing and managing one's own submission.\n\n\n\n\nCheck 'developer' role\n\n\n\n\nAlready done via the above tests.\n\n\n\n\nCheck 'admin' role\n\n\n\n\nLogin as admin/admin.\n\n\nCheck that all forms and submission are accessible (/admin/structure/yamlform)\n\n\nConfirm that managing form is disabled. This includes..\n\n\nAdd form (/admin/structure/yamlform/add)\n\n\nEdit form (/admin/structure/yamlform/manage/contact)\n\n\nDelete form (/admin/structure/yamlform/manage/contact/delete)\n\n\n\n\n\n\nPurging all submissions is also disabled. (/admin/structure/yamlform/results/purge)\n\n\nOnly developer can purge all submissions.\n\n\n\n\n\n\n\n\nCheck 'manager' role\n\n\n\n\nAs an 'admin' or 'developer' grant the 'manager' role access and manager \n  any submissions to a form.\n  (/admin/structure/yamlform/manage/contact/access)\n\n\nAssigning the 'manager' role to some permissions and the 'manager' user\n  to other permissions, this will test both role and user based access rules.\n\n\n\n\n\n\nLogin as manager/manager.\n\n\nCheck CRUD operations on 'Contact' form (/admin/structure/yamlform/manage/contact)\n\n\nCheck navigating between all submissions.\n\n\n\n\nCheck 'user' role\n\n\n\n\nAs an 'admin' or 'developer' grant the 'user' role access and manager own \n  submission to a form.\n  (/admin/structure/yamlform/manage/contact/access)\n\n\nAssigning the 'user' role to some permissions and the 'user' user\n  to other permissions, this will test both role and user based access rules.\n\n\n\n\n\n\nLogin as user/user.\n\n\nNote: You might see \"You have already submitted this form. View your previous submissions.\"\n  because devel generated 'Contact' form submissions are randomly assigned to \n  existing users.\n\n\nCreate a 'Contact' form submission (/yamlform/contact)\n\n\nCheck CRUD operations on 'Contact' form (/yamlform/contact/submissions)\n\n\nCheck navigating between own submissions.\n\n\n\n\n\n\nTranslation\n\n\nNotes\n\n\n\n\nUse \nGoogle Translate\n to create test \n  translations\n\n\nMultilingual Drupal 8\n\n\nDrupal 8 multilingual tidbits 16: configuration translation development\n\n\n\n\nSetup\n\n\n\n\nEnable YAML form translation test module (/admin/extend)\n\n\n\n\nCheck languages\n\n\n\n\nCheck that 'Spanish' is added to languages. (/admin/config/regional/language)\n\n\n\n\nCheck YAML form settings translation\n\n\n\n\nCheck 'Spanish' translation (/admin/structure/yamlform/settings/translate/es/edit) \n\n\n\n\nCheck 'Contact' form translation\n\n\n\n\nCheck 'Contact' translations \n  (/admin/structure/yamlform/manage/contact/translate/)\n\n\nCheck 'Contact' Spanish translations \n  (/admin/structure/yamlform/manage/contact/translate/es/edit)\n\n\n\n\nCheck that the translated elements can no be altered\n \n\n\nOnce a YAML form is translated only the Elements (YAML) values be changed.\n  \n\n\n\n\n\n\nGoto 'Contact' translations \n  (/admin/structure/yamlform/manage/contact/translate/)\n\n\n\n\nAlter an element/property\n\n\nRemove an element/property\n\n\nAdd an element/property    \n\n\n\n\n\n\n\n\nGoto 'Contact' Spanish translations \n  (/admin/structure/yamlform/manage/contact/translate/es/edit)\n\n\n\n\nAlter an element/property\n\n\nRemove an element/property\n\n\nAdd an element/property    \n\n\n\n\n\n\n\n\nTest 'Contact' form\n \n\n\n\n\nTest 'Contact' form submission via Spanish\n  (/es/yamlform/contact/test)\n\n\n\n\n\n\nUser Interface\n\n\nSetup\n\n\n\n\nEnable YAML form UI module (/admin/extend)\n\n\n\n\nReorder Basic Form\n\n\n\n\nGoto 'Contact' \n  (/admin/structure/yamlform/manage/contact)\n\n\nCheck UI displayed in 'Elements' tabs\n\n\nCheck YAML is display in 'Source (YAML)' tab.\n\n\nCheck drag-n-drop reordering.\n\n\nCheck 'Show row weights'\n\n\nParent is readonly\n\n\n\n\n\n\n\n\nReorder Advanced Form\n\n\n\n\nGoto 'Example: Elements' \n  (/admin/structure/yamlform/manage/example_elements)\n\n\nCheck moving elements under containers.\n\n\n\n\nReorder Wizard Form\n\n\n\n\nGoto 'Example: Wizard' \n  (/admin/structure/yamlform/manage/example_wizard)\n\n\nCheck that 'Wizard page' cannot be nested and stays as root element.\n\n\n\n\nCreate, Update, and Delete Element\n\n\n\n\nGoto 'Contact' \n  (/admin/structure/yamlform/manage/contact)\n\n\nAdd element (/admin/structure/yamlform/manage/contact/element/add)\n\n\nEdit element\n\n\nDelete element\n\n\n\n\nDuplicate Element\n\n\n\n\nGoto 'Contact' \n  (/admin/structure/yamlform/manage/contact)\n\n\nDuplicate 'Name' element (/admin/structure/yamlform/manage/contact/element/name/duplicate)\n\n\n\n\nCreate, Update, and Delete Container\n\n\n\n\nGoto 'Contact' \n  (/admin/structure/yamlform/manage/contact)\n\n\nAdd container element (/admin/structure/yamlform/manage/contact/element/add)\n\n\nAdd element to container\n\n\nDelete container\n\n\n\n\nTest Elements\n\n\n\n\n\n\nEnable YAML form test module (/admin/extend)\n\n\n\n\n\n\nGoto 'Elements'\n  (/d8_dev/admin/structure/yamlform/settings/elements)\n\n\n\n\n\n\nClick 'Test' under 'Operations' for each element.\n\n\n\n\n\n\n\n\nYAML form node\n\n\nSetup\n\n\n\n\nEnable YAML form node module (/admin/extend)\n\n\nCreate test 'any' and 'own' roles and users. (See development.md)\n\n\n\n\nAccount/Roles\n\n\n\n\nany: Manage any YAML form and YAML form node submissions.\n\n\nown: Manage own YAML form and YAML form node submissions.\n\n\n\n\nCreate YAML form node\n\n\n\n\nGoto 'Create YAML form' \n  (node/add/yamlform)\n\n\nEnter custom title\n\n\nSelect 'Contact' form\n\n\nSave and publish\n\n\nCheck 'Contact' form is displayed when node is viewed.\n\n\nCheck 'Test' tab.\n\n\nCheck 'Results' tab.\n\n\n\n\nSubmission (/node/{node}/yamlform/results/submissions)\n\n\n\n\nCheck only YAML form node submissions are displayed.\n\n\nCheck only YAML form node submissions can be navigated to.\n\n\nCheck that breadcrumbs link to the YAML form node.\n\n\nCheck that only submissions associated with the current node can be accessed.\n\n\nMust manually enter a different sid in the URL.\n  (/node/{node}/yamlform/results/manage/{yamlform_submission})\n\n\n\n\n\n\n\n\nAccess any YAML form node submissions\n\n\n\n\nLogin as any:any.\n\n\nCheck 'Test' tab.\n\n\nCheck 'Results' tab.\n\n\n\n\nAccess own YAML form node submissions\n\n\n\n\nChange YAML form node author to 'own'.\n\n\nLogin as own:own.\n\n\nCheck 'Test' tab.\n\n\nCheck 'Results' tab.\n\n\n\n\nDraft and Saved\n\n\n\n\nEnable drafts for 'Contact' form.\n  (/admin/structure/yamlform/manage/contact/settings)\n\n\nSave draft for 'Contact' form.\n  (/yamlform/contact)\n\n\nSave draft for YAML form node referencing 'Contact' form.\n  (/node/{node})\n\n\nCheck that the correct draft is loaded for both YAML form instances.\n\n\nCheck that previously saved submission is correctly linked to for both YAML\n  form instances.", 
            "title": "Test Script"
        }, 
        {
            "location": "/test/#notes", 
            "text": "Contact form will be used for most examples.  Incognito tab is the quickest way to test anonymous access to a form/feature.", 
            "title": "Notes"
        }, 
        {
            "location": "/test/#installation", 
            "text": "Update settings.php to allow the yamlform_test.module to be installed.  $settings['extension_discovery_scan_tests'] = TRUE;  Enable the YAML form and YAML form test module.", 
            "title": "Installation"
        }, 
        {
            "location": "/test/#setup", 
            "text": "See: development-tools.md for commands.   Create test roles and users.  Create test submissions.", 
            "title": "Setup"
        }, 
        {
            "location": "/test/#administration", 
            "text": "Forms (/admin/structure/yamlform)   Review forms provided by the yamlform.module and yamlform_test.module  Test filter  Filter a title, description, and/or elements (which is not visible)    Test sorting  Elements validation  Required: Leave blank  Valid YAML: Enter invalid YAML  Is array: Enter simple string value  Duplicate elements name: Enter two elements with the same names  Ignore properties: Enter element with #tree, #submit, etc... properties.     Results    Manage (/admin/structure/yamlform/results/manage)   Review submissions  Test filter  Filter by submission data (which is not visible)    Test sorting   Purge (/admin/structure/yamlform/results/purge)   Test purging less than 1000 submissions without batch processing.  Test purging more than 1000 submissions with batch processing.   Admin settings (/admin/structure/yamlform/settings)   Review default values  Review labels and descriptions  Test updating values  Test optional token support   YAML form options (/admin/structure/yamlform/settings/options/manage)   Review default YAML form options  Create, update, and delete YAML form options   YAML form elements (/admin/structure/yamlform/settings/elements)   Review YAML form element titles and descriptions.   YAML form handlers (/admin/structure/yamlform/settings/handlers)   Review YAML form handler titles and descriptions.", 
            "title": "Administration"
        }, 
        {
            "location": "/test/#forms", 
            "text": "(/admin/structure/yamlform)  Create new YAML form (/admin/structure/yamlform/add)   Check default elements  Test duplicate link  Message about previous submissions should be displayed   Duplicate existing YAML form (/admin/structure/yamlform/manage/template_registration/duplicate)   Duplicate a 'Template: Registration' form.  Confirm all elements and settings are duplicated.   Test YAML form elements (/yamlform/example_elements/test)   Test 'kitchen sink' list of supported elements  Verify each element collects and displays submitted data correctly   Test YAML form elements with custom elements (/yamlform/example_elements_formats/test)   Test elements have customized formats  Verify HTML and text display for submitted data   YAML form (/yamlform/contact)   Check system path (/yamlform/contact)  Check submit alias (/form/contact)  Check confirmation alias (/form/contact/confirmation)  This page is not used by the form which redirects to the homepage.     YAML form settings (/admin/structure/yamlform/manage/contact/settings)   Review form  Review hide/show logic (ie #States API).  Review default values  Review help text   YAML form access (/admin/structure/yamlform/manage/contact/access)  See: Access Rules   YAML form handlers (/admin/structure/yamlform/manage/contact/handlers)   Test contact form handlers  Create, update, and delete YAML form handler  Check that cardinality is support  Email handler support multiple instances  Null and Test handler only support a single instance    Test disabling a handler   YAML form email handlers (/admin/structure/yamlform/manage/contact/handlers)   Test email handlers  Test debug setting", 
            "title": "Forms"
        }, 
        {
            "location": "/test/#wizard", 
            "text": "YAML form wizard  (/form/example-wizard)   Check progress bar  Check data automatically saved between pages  Check reloading form returns to the current page  Review preview  Review confirmation  Check default wizard previous and next button labels \n  (/admin/structure/yamlform/settings)  Check YAML form previous and next button labels \n  (/admin/structure/yamlform/manage/example_wizard/settings)  Check adding  #previous_button_label  and  #next_button_label  to \n   wizard_page  (/admin/structure/yamlform/manage/example_wizard)", 
            "title": "Wizard"
        }, 
        {
            "location": "/test/#third-party-settings", 
            "text": "YAML form global third party settings  (/admin/structure/yamlform/manage/contact/third-party)   Check no modules installed message  Enable yamlform_test_third_party_settings.module  Add global message  Check global message is display on Contact form (/yamlform/contact)   YAML form specific third party settings  (/admin/structure/yamlform/manage/contact/third-party)   Check no modules installed message  Enable yamlform_test_third_party_settings.module  Add message  Check form specific message is display on Contact form (/yamlform/contact)", 
            "title": "Third Party Settings"
        }, 
        {
            "location": "/test/#results", 
            "text": "Submissions (/admin/structure/yamlform/manage/contact/results/submissions)   Check submission columns  Check sorting  Test filter  Filter by submission data (which is not visible)     Table (/admin/structure/yamlform/manage/contact/results/table)   Check elements columns (which are not sortable)  Check 'Example: Elements'  /admin/structure/yamlform/manage/example_elements/results/table     Download (/admin/structure/yamlform/manage/contact/results/download)   Unchecking 'Download CSV' allows you to view the CSV as plain text.  'Download CSV' is only available when there is less than 1000 submissions.    Check generating CSV using batch processing  Set batch limit to 1. (/admin/structure/yamlform/settings)  Download CSV (/admin/structure/yamlform/manage/contact/results/download)     Clear (/admin/structure/yamlform/manage/contact/results/clear)   Test clearing submissions.   Submission (/admin/structure/yamlform/manage/contact/results/submissions)  View tab   Test submission navigation   HTML   View submission as HTML   Plain text   View submission as plain text   Data (YAML)   View submission as data (YAML)   Edit tab   Edit submission  Simple confirmation message should always be displayed", 
            "title": "Results"
        }, 
        {
            "location": "/test/#features", 
            "text": "Elements   All elements (/yamlform/test_element)  Date elements (/yamlform/test_element_dates)  Entity autocomplete (/yamlform/test_element_entity_autocomplete)  Preview is broken and throwing serialization error.    Text format (/yamlform/test_element_text_format)  Ignored properties (/yamlform/test_element_ignored_properties)   Closed (/yamlform/test_form_closed)   Check that form is closed for anonymous user  Check that form is available to admin user but displays are warning.   Prepopulate (/yamlform/test_form_prepopulate)   Check that name is prepopulated using query string variable.   Confidential submissions (/yamlform/test_form_confidential)   Check that form can only be accessed when logged out.  Check that IP address is not saved with submission.   Submit text (/yamlform/test_form_submit_text)   Check that submit text is customized.   Preview (/yamlform/test_form_preview)   Check custom preview and next submission buttons.  Check custom preview message.  Check optional and required preview.   Draft (/yamlform/test_form_draft)   Check saving and reloading draft  Check autosave occurs with validation errors.  Check autosave occurs when previewing.   Confirmation   Inline (/yamlform/test_confirmation_inline)  Message (/yamlform/test_confirmation_message)  Page (/yamlform/test_confirmation_page)  URL (/yamlform/test_confirmation_url)   Limits (/yamlform/test_submission_limit)   Check only 1 submission is allowed for authenticated user.  Check only 3 submission are allowed for all users.  Check that admin can post new submission if their limit has no been reached.   Results Disabled (/yamlform/test_submission_disabled)   Check that results can be disabled. (Applies to users)   Private element access (/yamlform/test_element_private)   Check that element with #private property is only accessible to submission administrators.   Unique element property (/yamlform/test_element_unique)   Check that element with #unique property can't have same value submitted twice.  Check that existing submission can be updated.", 
            "title": "Features"
        }, 
        {
            "location": "/test/#permissions", 
            "text": "Create test roles and users. (See development.md)   Account/Roles   developer: Administer YAML forms and YAML form submissions.  admin: Administer YAML form submissions.  manager: Used to test managing a YAML form's submissions.  user: Used to test accessing and managing one's own submission.  any: Manage any YAML form and YAML form node submissions.  own: Manage own YAML form and YAML form node submissions.   Create own YAML form   Login as own/own.  Check that 'YAML form overview' is accessible. (/admin/structure/yamlform)  Check add YAML form (/admin/structure/yamlform/add)  Call new YAML form 'own'  Check adding element (/admin/structure/yamlform/manage/own)  Check duplicating 'own' YAML form.  Call new YAML form 'duplicate'  Check deleting 'duplicate' YAML form (/admin/structure/yamlform/manage/duplicate/delete)  Check that 'Templates' are available and can be previewed. (/admin/structure/yamlform/templates)   Manage own YAML form   Create test YAML form submission on 'own' form (/yamlform/own/test)  Check that submission is accessible and editable.   Managing any YAML form   Login as any/any.  Check that all YAML forms and results are available. (/admin/structure/yamlform)  Check that YAML form global settings are hidden.  Check add YAML form (/admin/structure/yamlform/add)  Call new YAML form 'any'   Changing YAML form author   Login as developer/developer.  Change YAML form author from 'any' to 'own' at the very bottom of YAML form's \n  settings. (/admin/structure/yamlform/any/settings)  Login as own/own.  Check that 'any' YAML form is accessible. (/admin/structure/yamlform/any)   Duplicating YAML form   Login as own/own.  Check that 'own' user can't duplicate a YAML form that they can't update. \n  (/admin/structure/yamlform/manage/contact/duplicate)  Returns 'Access denied'.", 
            "title": "Permissions"
        }, 
        {
            "location": "/test/#yaml-form-access-rules", 
            "text": "Create test roles and users. (See development.md)   Account/Roles   developer: Administer YAML forms and YAML form submissions.  admin: Administer YAML form submissions.  manager: Used to test managing a YAML form's submissions.  user: Used to test accessing and managing one's own submission.   Check 'developer' role   Already done via the above tests.   Check 'admin' role   Login as admin/admin.  Check that all forms and submission are accessible (/admin/structure/yamlform)  Confirm that managing form is disabled. This includes..  Add form (/admin/structure/yamlform/add)  Edit form (/admin/structure/yamlform/manage/contact)  Delete form (/admin/structure/yamlform/manage/contact/delete)    Purging all submissions is also disabled. (/admin/structure/yamlform/results/purge)  Only developer can purge all submissions.     Check 'manager' role   As an 'admin' or 'developer' grant the 'manager' role access and manager \n  any submissions to a form.\n  (/admin/structure/yamlform/manage/contact/access)  Assigning the 'manager' role to some permissions and the 'manager' user\n  to other permissions, this will test both role and user based access rules.    Login as manager/manager.  Check CRUD operations on 'Contact' form (/admin/structure/yamlform/manage/contact)  Check navigating between all submissions.   Check 'user' role   As an 'admin' or 'developer' grant the 'user' role access and manager own \n  submission to a form.\n  (/admin/structure/yamlform/manage/contact/access)  Assigning the 'user' role to some permissions and the 'user' user\n  to other permissions, this will test both role and user based access rules.    Login as user/user.  Note: You might see \"You have already submitted this form. View your previous submissions.\"\n  because devel generated 'Contact' form submissions are randomly assigned to \n  existing users.  Create a 'Contact' form submission (/yamlform/contact)  Check CRUD operations on 'Contact' form (/yamlform/contact/submissions)  Check navigating between own submissions.", 
            "title": "YAML form Access Rules"
        }, 
        {
            "location": "/test/#translation", 
            "text": "Notes   Use  Google Translate  to create test \n  translations  Multilingual Drupal 8  Drupal 8 multilingual tidbits 16: configuration translation development   Setup   Enable YAML form translation test module (/admin/extend)   Check languages   Check that 'Spanish' is added to languages. (/admin/config/regional/language)   Check YAML form settings translation   Check 'Spanish' translation (/admin/structure/yamlform/settings/translate/es/edit)    Check 'Contact' form translation   Check 'Contact' translations \n  (/admin/structure/yamlform/manage/contact/translate/)  Check 'Contact' Spanish translations \n  (/admin/structure/yamlform/manage/contact/translate/es/edit)   Check that the translated elements can no be altered    Once a YAML form is translated only the Elements (YAML) values be changed.       Goto 'Contact' translations \n  (/admin/structure/yamlform/manage/contact/translate/)   Alter an element/property  Remove an element/property  Add an element/property         Goto 'Contact' Spanish translations \n  (/admin/structure/yamlform/manage/contact/translate/es/edit)   Alter an element/property  Remove an element/property  Add an element/property         Test 'Contact' form     Test 'Contact' form submission via Spanish\n  (/es/yamlform/contact/test)", 
            "title": "Translation"
        }, 
        {
            "location": "/test/#user-interface", 
            "text": "Setup   Enable YAML form UI module (/admin/extend)   Reorder Basic Form   Goto 'Contact' \n  (/admin/structure/yamlform/manage/contact)  Check UI displayed in 'Elements' tabs  Check YAML is display in 'Source (YAML)' tab.  Check drag-n-drop reordering.  Check 'Show row weights'  Parent is readonly     Reorder Advanced Form   Goto 'Example: Elements' \n  (/admin/structure/yamlform/manage/example_elements)  Check moving elements under containers.   Reorder Wizard Form   Goto 'Example: Wizard' \n  (/admin/structure/yamlform/manage/example_wizard)  Check that 'Wizard page' cannot be nested and stays as root element.   Create, Update, and Delete Element   Goto 'Contact' \n  (/admin/structure/yamlform/manage/contact)  Add element (/admin/structure/yamlform/manage/contact/element/add)  Edit element  Delete element   Duplicate Element   Goto 'Contact' \n  (/admin/structure/yamlform/manage/contact)  Duplicate 'Name' element (/admin/structure/yamlform/manage/contact/element/name/duplicate)   Create, Update, and Delete Container   Goto 'Contact' \n  (/admin/structure/yamlform/manage/contact)  Add container element (/admin/structure/yamlform/manage/contact/element/add)  Add element to container  Delete container   Test Elements    Enable YAML form test module (/admin/extend)    Goto 'Elements'\n  (/d8_dev/admin/structure/yamlform/settings/elements)    Click 'Test' under 'Operations' for each element.", 
            "title": "User Interface"
        }, 
        {
            "location": "/test/#yaml-form-node", 
            "text": "Setup   Enable YAML form node module (/admin/extend)  Create test 'any' and 'own' roles and users. (See development.md)   Account/Roles   any: Manage any YAML form and YAML form node submissions.  own: Manage own YAML form and YAML form node submissions.   Create YAML form node   Goto 'Create YAML form' \n  (node/add/yamlform)  Enter custom title  Select 'Contact' form  Save and publish  Check 'Contact' form is displayed when node is viewed.  Check 'Test' tab.  Check 'Results' tab.   Submission (/node/{node}/yamlform/results/submissions)   Check only YAML form node submissions are displayed.  Check only YAML form node submissions can be navigated to.  Check that breadcrumbs link to the YAML form node.  Check that only submissions associated with the current node can be accessed.  Must manually enter a different sid in the URL.\n  (/node/{node}/yamlform/results/manage/{yamlform_submission})     Access any YAML form node submissions   Login as any:any.  Check 'Test' tab.  Check 'Results' tab.   Access own YAML form node submissions   Change YAML form node author to 'own'.  Login as own:own.  Check 'Test' tab.  Check 'Results' tab.   Draft and Saved   Enable drafts for 'Contact' form.\n  (/admin/structure/yamlform/manage/contact/settings)  Save draft for 'Contact' form.\n  (/yamlform/contact)  Save draft for YAML form node referencing 'Contact' form.\n  (/node/{node})  Check that the correct draft is loaded for both YAML form instances.  Check that previously saved submission is correctly linked to for both YAML\n  form instances.", 
            "title": "YAML form node"
        }
    ]
}